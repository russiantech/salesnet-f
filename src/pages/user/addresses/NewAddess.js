import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
const NewAddress = () => {
    const existingAddresses = [
        { id: 1, address: '123 Main St, Austin, TX, 78701' },
        { id: 2, address: '456 Elm St, Chicago, IL, 60601' },
        { id: 3, address: '789 Maple Ave, New York, NY, 10001' },
    ];
    return (_jsx(_Fragment, { children: _jsx("div", { className: "modal fade", id: "newAddressModal", "data-bs-backdrop": "static", tabIndex: -1, "aria-labelledby": "newAddressModalLabel", "aria-hidden": "true", children: _jsx("div", { className: "modal-dialog modal-lg modal-dialog-centered", children: _jsxs("div", { className: "modal-content", children: [_jsxs("div", { className: "modal-header", children: [_jsx("h5", { className: "modal-title", id: "newAddressModalLabel", children: "Add New Address" }), _jsx("button", { type: "button", className: "btn-close", "data-bs-dismiss": "modal", "aria-label": "Close" })] }), _jsx("div", { className: "modal-body", children: _jsxs("form", { className: "row g-3 g-lg-4 needs-validation", noValidate: true, children: [_jsxs("div", { className: "col-12", children: [_jsx("label", { className: "form-label", children: "Choose Existing Address" }), existingAddresses.map((address) => (_jsxs("div", { className: "form-check alert d-flex align-items-center alert-info mb-3", role: 'alert', children: [_jsx("input", { className: "form-check-input", type: "radio", name: "existingAddress", id: `address-${address.id}`, value: address.address }), _jsx("label", { className: "form-check-label", htmlFor: `address-${address.id}`, children: address.address })] }, address.id)))] }), _jsx("div", { className: "col-lg-6", children: _jsxs("div", { className: "position-relative", children: [_jsx("label", { htmlFor: "name", className: "form-label", children: "Name" }), _jsx("input", { type: "text", className: "form-control", id: "name", required: true }), _jsx("div", { className: "invalid-feedback", children: "Please enter your name!" })] }) }), _jsx("div", { className: "col-lg-6", children: _jsxs("div", { className: "position-relative", children: [_jsx("label", { htmlFor: "email", className: "form-label", children: "Email" }), _jsx("input", { type: "email", className: "form-control", id: "email", required: true }), _jsx("div", { className: "invalid-feedback", children: "Please enter a valid email!" })] }) }), _jsx("div", { className: "col-lg-6", children: _jsxs("div", { className: "position-relative", children: [_jsx("label", { htmlFor: "phone", className: "form-label", children: "Phone" }), _jsx("input", { type: "tel", className: "form-control", id: "phone", required: true }), _jsx("div", { className: "invalid-feedback", children: "Please enter your phone number!" })] }) }), _jsx("div", { className: "col-lg-6", children: _jsxs("div", { className: "position-relative", children: [_jsx("label", { className: "form-label", children: "Country" }), _jsxs("select", { className: "form-select", "aria-label": "Select country", required: true, children: [_jsx("option", { value: "", children: "Select country..." }), _jsxs("optgroup", { label: "Africa", children: [_jsx("option", { value: "Nigeria", children: "Nigeria" }), _jsx("option", { value: "South Africa", children: "South Africa" })] })] }), _jsx("div", { className: "invalid-feedback", children: "Please select your country!" })] }) }), _jsx("div", { className: "col-lg-6", children: _jsxs("div", { className: "position-relative", children: [_jsx("label", { className: "form-label", children: "City" }), _jsxs("select", { className: "form-select", "aria-label": "Select city", required: true, children: [_jsx("option", { value: "", children: "Select city..." }), _jsx("option", { value: "Austin", children: "Austin" }), _jsx("option", { value: "Chicago", children: "Chicago" })] }), _jsx("div", { className: "invalid-feedback", children: "Please select your city!" })] }) }), _jsx("div", { className: "col-lg-4", children: _jsxs("div", { className: "position-relative", children: [_jsx("label", { htmlFor: "zip", className: "form-label", children: "ZIP Code" }), _jsx("input", { type: "text", className: "form-control", id: "zip", required: true }), _jsx("div", { className: "invalid-feedback", children: "Please enter your ZIP code!" })] }) }), _jsx("div", { className: "col-lg-8", children: _jsxs("div", { className: "position-relative", children: [_jsx("label", { htmlFor: "address", className: "form-label", children: "Address" }), _jsx("input", { type: "text", className: "form-control", id: "address", required: true }), _jsx("div", { className: "invalid-feedback", children: "Please enter your address!" })] }) }), _jsx("div", { className: "col-12", children: _jsxs("div", { className: "form-check mb-0", children: [_jsx("input", { type: "checkbox", className: "form-check-input", id: "setPrimary" }), _jsx("label", { htmlFor: "setPrimary", className: "form-check-label", children: "Set as primary address" })] }) }), _jsx("div", { className: "col-12", children: _jsxs("div", { className: "d-flex gap-3 pt-2 pt-sm-0", children: [_jsx("button", { type: "submit", className: "btn btn-primary", children: "Add Address" }), _jsx("button", { type: "button", className: "btn btn-secondary", "data-bs-dismiss": "modal", children: "Close" })] }) })] }) })] }) }) }) }));
};
export default NewAddress;
